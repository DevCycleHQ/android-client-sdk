/*
 * DevCycle Client SDK API
 * Documents the DevCycle Client SDK API which powers bucketing and descisions for DevCycle's client SDKs.
 *
 * OpenAPI spec version: 1-oas3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package com.devcycle.android.client.sdk.model

import io.swagger.v3.oas.annotations.media.Schema
import java.lang.StringBuilder
import java.util.*

/**
 * ErrorResponse
 */
class ErrorResponse {
    /**
     * Error message
     * @return message
     */
    @get:Schema(required = true, description = "Error message")
    var message: String? = null

    /**
     * Additional error information detailing the error reasoning
     * @return data
     */
    @get:Schema(description = "Additional error information detailing the error reasoning")
    var data: Any? = null
    fun message(message: String?): ErrorResponse {
        this.message = message
        return this
    }

    fun data(data: Any?): ErrorResponse {
        this.data = data
        return this
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val errorResponse = o as ErrorResponse
        return message == errorResponse.message &&
                data == errorResponse.data
    }

    override fun hashCode(): Int {
        return Objects.hash(message, data)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class ErrorResponse {\n")
        sb.append("    message: ").append(toIndentedString(message)).append("\n")
        sb.append("    data: ").append(toIndentedString(data)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}